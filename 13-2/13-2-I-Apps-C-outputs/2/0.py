
def can_transfer_all_data(n, q, s, queues, sensors, downlink_windows):
    # Initialize a list to store the data generated by each sensor
    sensor_data = [0] * s
    # Initialize a list to store the data in each queue
    queue_data = [0] * q
    # Initialize a variable to keep track of the total data transferred
    total_data = 0

    # Loop through each downlink window
    for window in downlink_windows:
        # Get the amount of data that can be transferred in this window
        window_data = window[0]
        # Loop through each sensor
        for i in range(s):
            # Get the amount of data generated by this sensor in this window
            sensor_data[i] += window[i + 1]
            # Check if the sensor's data fits in the queue it feeds into
            if sensor_data[i] <= queues[sensors[i] - 1]:
                # Add the sensor's data to the queue
                queue_data[sensors[i] - 1] += sensor_data[i]
                # Reset the sensor's data to 0
                sensor_data[i] = 0
        # Add the amount of data that can be transferred in this window to the total data transferred
        total_data += window_data

    # Check if all data has been transferred
    if total_data == sum(queue_data):
        return "possible"
    else:
        return "impossible"

if __name__ == '__main__':
    n, q, s = map(int, input().split())
    queues = list(map(int, input().split()))
    sensors = list(map(int, input().split()))
    downlink_windows = []
    for _ in range(n):
        downlink_windows.append(list(map(int, input().split())))
    print(can_transfer_all_data(n, q, s, queues, sensors, downlink_windows))

