def max_fill(grid, capacity):
    import math
    
    # --------------------------------------------------------------------------
    # The idea is to use a BFS to find the shortest path to the goal.
    # --------------------------------------------------------------------------
    # Time Complexity: O(R*C)
    # Space Complexity: O(R*C)
    # --------------------------------------------------------------------------
    # R: number of rows
    # C: number of columns
    # --------------------------------------------------------------------------
    # R: 3
    # C: 4
    # --------------------------------------------------------------------------
    # 0 0 1 0
    # 0 1 0 0
    # 1 1 1 1
    # --------------------------------------------------------------------------
    # 0 0 1 1
    # 0 0 0 0
    # 1 1 1 1
    # 0 1 1 1
    # --------------------------------------------------------------------------
    # 0 0 0
    # 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 0 0 0
    # 0 0 0 0
    # --------------------------------------------------------------------------
    # 0 